load("@npm//:defs.bzl", "npm_link_all_packages")
load("//tools/bazel:ts.bzl", "ts_config")
load("@rules_multirun//:defs.bzl", "command", "multirun")
load("@npm//:tsconfig-to-swcconfig/package_json.bzl", tsconfig_to_swcconfig = "bin")

npm_link_all_packages(name = "node_modules")

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = [":__subpackages__"],
    deps = [":tsconfig_base"],
)

ts_config(
    name = "tsconfig_base",
    src = "tsconfig.base.json",
    visibility = [":__subpackages__"],
)

tsconfig_to_swcconfig.t2s(
    name = "write_swcrc",
    srcs = ["tsconfig.base.json"],
    args = [
        "--filename",
        "$(location tsconfig.base.json)",
    ],
    stdout = ".swcrc",
    visibility = [":__subpackages__"],
)

ts_config(
    name = "tsconfig_react",
    src = "tsconfig.react.json",
    visibility = [":__subpackages__"],
    deps = [":tsconfig_base"],
)

tsconfig_to_swcconfig.t2s(
    name = "write_swcrc_react",
    srcs = [
        "tsconfig.base.json",
        "tsconfig.react.json",
    ],
    args = [
        "--filename",
        "$(location tsconfig.react.json)",
    ],
    stdout = ".swcrc.react",
    visibility = [":__subpackages__"],
)

ts_config(
    name = "tsconfig_node",
    src = "tsconfig.node.json",
    visibility = [":__subpackages__"],
    deps = [":tsconfig_base"],
)

tsconfig_to_swcconfig.t2s(
    name = "write_swcrc_node",
    srcs = [
        "tsconfig.base.json",
        "tsconfig.node.json",
    ],
    args = [
        "--filename",
        "$(location tsconfig.node.json)",
    ],
    stdout = ".swcrc.node",
    visibility = [":__subpackages__"],
)

command(
    name = "tag_task_image",
    command = "//services/task/src/main:deliver",
)

command(
    name = "tag_journal_image",
    command = "//services/journal/src/main:deliver",
)

command(
    name = "tag_autojournal_image",
    command = "//services/autojournal/src/main:deliver",
)

command(
    name = "tag_tasklist_image",
    command = "//apps/tasklist:deliver",
)

command(
    name = "tag_journal_app_image",
    command = "//apps/journal_app:deliver",
)

command(
    name = "tag_proxy_image",
    command = "//infra/local/proxy:load",
)

# Builds and tags local environment images, and then pushes to the local docker repository.
multirun(
    name = "tag_images",
    commands = [
        "tag_task_image",
        "tag_journal_image",
        "tag_autojournal_image",
        "tag_tasklist_image",
        "tag_journal_app_image",
        "tag_proxy_image",
    ],
    jobs = 0,  # Set to 0 to run in parallel, defaults to sequential
)

# Builds and tags local environment images with Bazel, and then runs with Docker.
multirun(
    name = "start",
    commands = [
        "tag_images",
        "local_environment",
    ],
)

# Runs local environment with Docker using existing images, without building and tagging changes with Bazel first.
# Note: depends on configured images existing in the docker repository.
command(
    name = "local_environment",
    command = "//infra/local",
)
