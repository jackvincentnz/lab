# API root

type Query {
  allLineItems: [LineItem!]!
  allCategories: [Category!]!
  clientConfiguration: ClientConfiguration!
}

type Mutation {
  provisionTenant(input: ProvisionTenantInput!): ProvisionTenantResponse!
  addLineItem(input: AddLineItemInput!): AddLineItemResponse!
  createCategory(input: CreateCategoryInput!): CreateCategoryResponse!
  addCategoryValue(input: AddCategoryValueInput!): AddCategoryValueResponse!
  categorizeLineItem(
    input: CategorizeLineItemInput!
  ): CategorizeLineItemResponse!
}

# Objects

type Tenant {
  id: ID!
  name: String!
}

type LineItem {
  id: ID!
  name: String!
  categorizations: [Categorization!]!
}

type Categorization {
  categoryId: ID!
  categoryValueId: ID!
}

type Category {
  id: ID!
  name: String!
  values: [CategoryValue!]!
}

type CategoryValue {
  id: ID!
  name: String!
}

type ClientConfiguration {
  statsigKey: String
}

# Inputs

input ProvisionTenantInput {
  name: String!
}

input AddLineItemInput {
  name: String!
}

input CreateCategoryInput {
  name: String!
}

input AddCategoryValueInput {
  categoryId: ID!
  name: String!
}

input CategorizeLineItemInput {
  lineItemId: ID!
  categoryId: ID!
  categoryValueId: ID!
}

# Responses

type ProvisionTenantResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  tenant: Tenant
}

type AddLineItemResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  lineItem: LineItem
}

type CreateCategoryResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  category: Category
}

type AddCategoryValueResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  categoryValue: CategoryValue
}

type CategorizeLineItemResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  lineItem: LineItem!
}

interface MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
}
